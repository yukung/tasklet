# -- SQL Definition --
sqltable.findUserByUserName            = SELECT id, user_name AS userName, email, password, display_name AS displayName, created_on AS createdon, updated_on AS updatedon FROM users WHERE user_name = ?
sqltable.findUserByUserNameAndPassword = SELECT id, user_name AS userName, email, password, display_name AS displayName, created_on AS createdOn, updated_on AS updatedOn FROM users WHERE user_name = ? AND password = ?
sqltable.getUserCount                  = SELECT COUNT(*) AS num FROM users WHERE user_name = ?
sqltable.addUser                       = INSERT INTO users (user_name, email, password, display_name, created_on, updated_on) VALUES (?,?,?,?,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP)
sqltable.addDefaultCategory            = INSERT INTO categories(user_id, name, created_on, updated_on) VALUES (?, '\u672a\u5206\u985e', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
sqltable.getCountByUserId              = SELECT COUNT(activities.*) AS num FROM activities, indexes WHERE activities.id = indexes.activity_id AND indexes.user_id = ?
sqltable.findActivitiesByUserId        = SELECT activities.id, title, seq, is_incomplete AS isIncomplete, created_on AS createdOn, updated_on AS updatedOn FROM activities, indexes WHERE activities.id = indexes.activity_id AND indexes.user_id = ? AND is_incomplete = true ORDER BY seq DESC LIMIT ? OFFSET ?
sqltable.findTasksByActivityId         = SELECT tasks.id, tasks.activity_id AS activityId, title, priority, status, period, finished_on AS finishedOn, estimated_time AS estimatedTime, actual_time AS actualTime, created_on AS createdOn, updated_on AS updatedOn FROM tasks, indexes WHERE tasks.activity_id = indexes.activity_id AND indexes.activity_id = ? ORDER BY priority ASC, status ASC, period ASC
sqltable.findCategoryByActivityId      = SELECT categories.id, categories.user_id AS userId, name, created_on AS createdOn, updated_on AS updatedOn FROM categories, indexes WHERE categories.id = indexes.category_id AND indexes.activity_id = ?